*-------------------------------------------------------------------*
* Report Name: #SAPPACK_PROGNAME#
* Generated by IBM InfoSphere Rapid Generator for SAP Applications 
* Generated at: #SAPPACK_TIME#
*-------------------------------------------------------------------*


REPORT #SAPPACK_PROGNAME#.


* Step 1. Declare Table
TABLES:
     #SAPPACK_CHECKTABLE_DECL#
     #SAPPACK_TEXTTABLE#.


* Step 2. Declare Structure
DATA:  BEGIN OF ST_1 OCCURS 1,
#SAPPACK_ST_1DECLARATIONS#
END OF ST_1.
DATA:  IT_1 LIKE ST_1 OCCURS 0 WITH HEADER LINE.


* Declare Structure for INTO clause
DATA:  BEGIN OF ST_2 OCCURS 1,
#SAPPACK_ST_2DECLARATIONS#
END OF ST_2.
DATA:  TEMPT1 LIKE TABLE OF ST_2,
       TEMPT2 LIKE TABLE OF ST_2,
       RESULTTAB LIKE TABLE OF ST_2,
       LINE1 LIKE ST_2,
       LINE2 LIKE ST_2,
       LINE3 LIKE ST_2.


* Step 3 & 4. Table data and structure for RFC
DATA:
ETLTRSFTAB  TYPE TABLE OF ZETLTRSF INITIAL SIZE 320 WITH HEADER LINE,
ETLTRSFSTRUCTURE       TYPE ZETLSTR,
ETLTRSFSTRUCTURE_START TYPE ZETLSTR,
RFCTABLESIZE           TYPE I,
RFCDEST(32)            TYPE C,
RFCDESTC(32)           TYPE C,
RFCQUEUE(24)           TYPE C,
D_PACK(32000)          TYPE C,
D_OFFSET_TMP           TYPE I,
D_OFFSET               TYPE I,
D_LEN                  TYPE I.


ETLTRSFSTRUCTURE_START-SEQNO = -1.
ETLTRSFSTRUCTURE_START-RECID = -1.
ETLTRSFSTRUCTURE_START-SDATA = 'XXX->DATA START<-XXX'.
ETLTRSFSTRUCTURE_START-LEN = #SAPPACK_OFFSET#.
ETLTRSFSTRUCTURE-SEQNO = 0.
ETLTRSFSTRUCTURE-RECID = 0.
ETLTRSFSTRUCTURE-SDATA = ''.
ETLTRSFSTRUCTURE-LEN = 0.
RFCTABLESIZE = 0.
RFCDEST  = '#SAPPACK_RFCDEST#'.
RFCDESTC  = '#SAPPACK_RFCDEST#'.
RFCQUEUE = ''.

*#ADDITIONAL_ABAP_CODE#

* Step 5. START-OF-SELECTION


CALL FUNCTION 'RFC_PING' DESTINATION RFCDESTC.
   IF SY-SUBRC <> 0.
     EXIT.
   ENDIF.
   
   
* Select check table into TEMPT1
SELECT 
#SAPPACK_CHECKTABLE_COLUMNS#
INTO CORRESPONDING FIELDS OF TABLE TEMPT1
FROM
#SAPPACK_CHECKTABLE#.

* loop over TEMPT1 and insert check table contents if they exist
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#LOOP AT TEMPT1 INTO LINE1.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  SELECT 
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  #SAPPACK_TEXTTABLE_COLUMNS#
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  INTO CORRESPONDING FIELDS OF TABLE TEMPT2
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  FROM #SAPPACK_TEXTTABLE#
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  WHERE #SAPPACK_JOINCONDITION#.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  IF SY-SUBRC <> 0.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#     APPEND LINE1 TO RESULTTAB.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  ELSE.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#     LOOP AT TEMPT2 INTO LINE2.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#       #SAPPACK_LOOP_TEMPTABLE_SET_CLAUSE#
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#       APPEND LINE2 TO RESULTTAB.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT##SAPPACK_USE_ONLY_FIRST_TEXTTABLE_ENTRY_COMMENT#* EXIT here if we only want the first tuple of the text table
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT##SAPPACK_USE_ONLY_FIRST_TEXTTABLE_ENTRY_COMMENT#       EXIT.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#     ENDLOOP.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#  ENDIF.
#SAPPACK_COND_TEXTTABLE_EXISTS_COMMENT#ENDLOOP.

#SAPPACK_COND_TEXTTABLE_DOESNOT_EXIST_COMMENT#LOOP AT TEMPT1 INTO LINE2.
#SAPPACK_COND_TEXTTABLE_DOESNOT_EXIST_COMMENT#   APPEND LINE2 TO RESULTTAB.
#SAPPACK_COND_TEXTTABLE_DOESNOT_EXIST_COMMENT#ENDLOOP.

   
LOOP AT RESULTTAB INTO LINE3.
#SAPPACK_ITERATOR_SETCLAUSE#
      IF D_LEN < 16000.
         D_PACK+D_OFFSET(#SAPPACK_OFFSET#) = IT_1.
         D_OFFSET = D_OFFSET + #SAPPACK_OFFSET#.
         D_LEN = D_OFFSET + #SAPPACK_OFFSET#.
      ELSE.
         PERFORM SEND_RECORD USING D_PACK.
  IF RFCTABLESIZE > 3000.
    PERFORM RFC_CALL_SEND_DATA.
  ENDIF.
         D_PACK = IT_1.
         D_OFFSET = #SAPPACK_OFFSET#.
         D_LEN = D_OFFSET + #SAPPACK_OFFSET#.
      ENDIF.
ENDLOOP.
PERFORM SEND_RECORD USING D_PACK.
IF RFCTABLESIZE > 1.
  PERFORM RFC_CALL_SEND_DATA.
ENDIF.

COMMIT WORK.
PERFORM RFC_CALL_END_DATA.
*-------------------------------------------------------------------*
* Send record to RFC Transfer table
*-------------------------------------------------------------------*
FORM SEND_RECORD USING P_REC_BUF.
  D_OFFSET_TMP = 0.
  RFCTABLESIZE = RFCTABLESIZE + 1.
  APPEND  ETLTRSFSTRUCTURE_START to ETLTRSFTAB.
WHILE D_OFFSET_TMP < D_OFFSET.
  ETLTRSFSTRUCTURE-SEQNO = ETLTRSFSTRUCTURE-SEQNO + 1.
  ETLTRSFSTRUCTURE-RECID = ETLTRSFSTRUCTURE-RECID + 1.
  ETLTRSFSTRUCTURE-SDATA = P_REC_BUF+D_OFFSET_TMP.
  ETLTRSFSTRUCTURE-LEN = D_OFFSET - D_OFFSET_TMP.
  RFCTABLESIZE = RFCTABLESIZE + 1.
  APPEND  ETLTRSFSTRUCTURE to ETLTRSFTAB.
  D_OFFSET_TMP = D_OFFSET_TMP + 1000.
ENDWHILE.
ENDFORM.

*-------------------------------------------------------------------*
* Send End data
*-------------------------------------------------------------------*
FORM RFC_CALL_END_DATA.
PERFORM CHECK_ARFCSDATA.
  WHILE RFCDEST = RFCDESTC.
    CALL FUNCTION 'RFC_PING' DESTINATION RFCDESTC.
      IF SY-SUBRC <> 0.
        EXIT.
      ENDIF.
    PERFORM CHECK_ARFCSDATA.
    WAIT UP TO 1 SECONDS.
  ENDWHILE.

  ETLTRSFSTRUCTURE-SEQNO = 0.
  ETLTRSFSTRUCTURE-RECID = 0.
  ETLTRSFSTRUCTURE-SDATA = ''.
  ETLTRSFSTRUCTURE-LEN = 0.
  APPEND  ETLTRSFSTRUCTURE to ETLTRSFTAB.
  PERFORM RFC_CALL_SEND_DATA.
  COMMIT WORK.
ENDFORM.

*-------------------------------------------------------------------*
* Send data to RFC Transfer table
*-------------------------------------------------------------------*
FORM RFC_CALL_SEND_DATA.

CALL FUNCTION 'Z_DS_ABAP_TRANS'
IN BACKGROUND TASK
AS SEPARATE UNIT
  DESTINATION RFCDESTC
TABLES
  ETLSTRSF = ETLTRSFTAB.

IF SY-SUBRC <> 0.
  EXIT.
ENDIF.

RFCTABLESIZE = 0.
REFRESH ETLTRSFTAB.
ENDFORM.


*-----------------------------------------------------------------*
*CHECK ARFCSDATA for available entries                            *
*-----------------------------------------------------------------*
FORM  CHECK_ARFCSDATA.
  RFCDEST = ''.
  SELECT ARFCSDATA~ARFCDEST FROM ARFCSDATA
    INTO (RFCDEST) UP TO 1 ROWS
    WHERE ARFCSDATA~ARFCDEST = RFCDESTC.
  ENDSELECT. ENDFORM.

